# Generated by Django 5.1.7 on 2025-03-21 12:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Organisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name",
                        max_length=100,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Logo",
                        null=True,
                        upload_to="organisations/",
                        verbose_name="logo",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description", verbose_name="description"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        help_text="Contact Email",
                        max_length=254,
                        verbose_name="contact email",
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        default=list, help_text="Tags", verbose_name="tags"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Location",
                        max_length=100,
                        null=True,
                        verbose_name="location",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Created At",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Updated At", verbose_name="updated at"
                    ),
                ),
            ],
            options={
                "verbose_name": "organisation",
                "verbose_name_plural": "organisations",
            },
        ),
        migrations.CreateModel(
            name="UserVerificationOTP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        help_text="Email",
                        max_length=254,
                        verbose_name="email",
                    ),
                ),
                (
                    "otp",
                    models.CharField(help_text="OTP", max_length=6, verbose_name="otp"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Created At",
                        verbose_name="created at",
                    ),
                ),
            ],
            options={
                "verbose_name": "user verification otp",
                "verbose_name_plural": "user verification otps",
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        help_text="Email Address",
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "email_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Email Verified",
                        verbose_name="email verified",
                    ),
                ),
                (
                    "mobile_no",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Mobile No",
                        max_length=20,
                        null=True,
                        verbose_name="mobile no",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Location",
                        max_length=50,
                        null=True,
                        verbose_name="location",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        help_text="Latitude",
                        max_digits=9,
                        null=True,
                        verbose_name="latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        help_text="Longitude",
                        max_digits=9,
                        null=True,
                        verbose_name="longitude",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False, help_text="Is Staff", verbose_name="is staff"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Is Superuser",
                        verbose_name="is superuser",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is Active", verbose_name="is active"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date Joined",
                        verbose_name="date joined",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
        ),
        migrations.CreateModel(
            name="OrganisationCommittee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "designation",
                    models.CharField(
                        default="Member",
                        help_text="Designation",
                        max_length=50,
                        verbose_name="designation",
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        default=dict,
                        help_text="Permissions granted to the user",
                        verbose_name="permissions",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Created At",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Updated At", verbose_name="updated at"
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        help_text="Organisation",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="committee_members",
                        related_query_name="committee_member",
                        to="users.organisation",
                        verbose_name="organisation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organisation_committee",
                        related_query_name="organisation_committee",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "organisation committee",
                "verbose_name_plural": "organisation committees",
            },
        ),
        migrations.AddField(
            model_name="organisation",
            name="committee",
            field=models.ManyToManyField(
                blank=True,
                help_text="Committee Members",
                related_name="organisations",
                related_query_name="organisation",
                through="users.OrganisationCommittee",
                to=settings.AUTH_USER_MODEL,
                verbose_name="committee",
            ),
        ),
        migrations.CreateModel(
            name="UserAuthTokens",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "auth_token",
                    models.CharField(
                        default="",
                        help_text="Auth Token",
                        max_length=255,
                        unique=True,
                        verbose_name="auth token",
                    ),
                ),
                (
                    "device_token",
                    models.CharField(
                        default="",
                        help_text="Device Token",
                        max_length=255,
                        unique=True,
                        verbose_name="device token",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("web", "Web"), ("api", "API")],
                        help_text="Type of token",
                        max_length=50,
                        verbose_name="type",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Created At",
                        verbose_name="created at",
                    ),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last Used At",
                        null=True,
                        verbose_name="last used at",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="auth_tokens",
                        related_query_name="auth_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "user auth token",
                "verbose_name_plural": "user auth tokens",
            },
        ),
    ]
